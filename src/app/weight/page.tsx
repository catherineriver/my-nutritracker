"use client";
import { useState, useEffect } from "react";
import { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from "recharts";
import Link from "next/link";

export default function WeightPage() {
    const [weightData, setWeightData] = useState<any[]>([]);
    const [profile, setProfile] = useState<any>(null);
    const [loading, setLoading] = useState(false);

    useEffect(() => {
        loadProfile();
    }, []);

    const loadProfile = async () => {
        setLoading(true);
        try {
            const res = await fetch('/api/diary?method=profile');
            if (res.ok) {
                const json = await res.json();
                console.log('Profile data:', json);
                setProfile(json.profile);
                
                // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ –≤–µ—Å–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç API)
                generateSampleWeightData(json.profile);
            }
        } catch (error) {
            console.error('Error loading profile:', error);
        }
        setLoading(false);
    };

    const generateSampleWeightData = (profileData: any) => {
        if (!profileData) return;
        
        const currentWeight = parseFloat(profileData.last_weight_kg);
        const goalWeight = parseFloat(profileData.goal_weight_kg);
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
        const data = [];
        const today = new Date();
        
        for (let i = 29; i >= 0; i--) {
            const date = new Date(today);
            date.setDate(date.getDate() - i);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à–∏–µ —Å–ª—É—á–∞–π–Ω—ã–µ –∫–æ–ª–µ–±–∞–Ω–∏—è –≤–µ—Å–∞
            const variation = (Math.random() - 0.5) * 2; // ¬±1 –∫–≥
            const weight = currentWeight + variation;
            
            data.push({
                date: date.toISOString().split('T')[0],
                dateFormatted: date.toLocaleDateString('ru-RU', { day: '2-digit', month: '2-digit' }),
                weight: Math.round(weight * 10) / 10,
                goal: goalWeight
            });
        }
        
        setWeightData(data);
    };

    const formatWeight = (weight: number) => `${weight} –∫–≥`;

    const currentWeight = profile?.last_weight_kg ? parseFloat(profile.last_weight_kg) : 0;
    const goalWeight = profile?.goal_weight_kg ? parseFloat(profile.goal_weight_kg) : 0;
    const weightDiff = currentWeight - goalWeight;
    const height = profile?.height_cm ? parseFloat(profile.height_cm) : 0;
    const bmi = height > 0 ? (currentWeight / Math.pow(height / 100, 2)) : 0;

    const getBMICategory = (bmi: number) => {
        if (bmi < 18.5) return { text: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –≤–µ—Å–∞', color: 'text-blue-600' };
        if (bmi < 25) return { text: '–ù–æ—Ä–º–∞–ª—å–Ω—ã–π –≤–µ—Å', color: 'text-green-600' };
        if (bmi < 30) return { text: '–ò–∑–±—ã—Ç–æ—á–Ω—ã–π –≤–µ—Å', color: 'text-yellow-600' };
        return { text: '–û–∂–∏—Ä–µ–Ω–∏–µ', color: 'text-red-600' };
    };

    const bmiCategory = getBMICategory(bmi);

    return (
        <div className="min-h-screen bg-gradient-to-br from-purple-50 to-pink-100">
            <div className="container mx-auto px-4 py-8">
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
                <div className="text-center mb-8">
                    <h1 className="text-4xl font-bold text-gray-800 mb-2">‚öñÔ∏è –ò—Å—Ç–æ—Ä–∏—è –≤–µ—Å–∞</h1>
                    <p className="text-gray-600">–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–µ—Å–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–∏</p>
                    <div className="mt-4">
                        <Link 
                            href="/" 
                            className="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium"
                        >
                            ‚Üê –ù–∞–∑–∞–¥ –∫ –ø–∏—Ç–∞–Ω–∏—é
                        </Link>
                    </div>
                </div>

                {loading && (
                    <div className="text-center py-8">
                        <div className="text-2xl">‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</div>
                    </div>
                )}

                {profile && (
                    <div className="space-y-6">
                        {/* –¢–µ–∫—É—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ */}
                        <div className="bg-white rounded-2xl shadow-lg p-6">
                            <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">üìä –¢–µ–∫—É—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏</h2>
                            <div className="grid grid-cols-2 lg:grid-cols-4 gap-6">
                                <div className="bg-gradient-to-br from-blue-50 to-blue-100 p-4 rounded-xl text-center">
                                    <div className="text-3xl font-bold text-blue-600 mb-1">{currentWeight}</div>
                                    <div className="text-sm font-medium text-blue-700">‚öñÔ∏è –¢–µ–∫—É—â–∏–π –≤–µ—Å (–∫–≥)</div>
                                </div>
                                <div className="bg-gradient-to-br from-green-50 to-green-100 p-4 rounded-xl text-center">
                                    <div className="text-3xl font-bold text-green-600 mb-1">{goalWeight}</div>
                                    <div className="text-sm font-medium text-green-700">üéØ –¶–µ–ª–µ–≤–æ–π –≤–µ—Å (–∫–≥)</div>
                                </div>
                                <div className="bg-gradient-to-br from-purple-50 to-purple-100 p-4 rounded-xl text-center">
                                    <div className="text-3xl font-bold text-purple-600 mb-1">{height}</div>
                                    <div className="text-sm font-medium text-purple-700">üìè –†–æ—Å—Ç (—Å–º)</div>
                                </div>
                                <div className="bg-gradient-to-br from-orange-50 to-orange-100 p-4 rounded-xl text-center">
                                    <div className="text-3xl font-bold text-orange-600 mb-1">{bmi.toFixed(1)}</div>
                                    <div className="text-sm font-medium text-orange-700">üìà –ò–ú–¢</div>
                                    <div className={`text-xs ${bmiCategory.color} mt-1`}>{bmiCategory.text}</div>
                                </div>
                            </div>
                            
                            {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Ü–µ–ª–∏ */}
                            <div className="mt-6 p-4 bg-gray-50 rounded-xl">
                                <div className="text-center">
                                    <div className="text-lg font-semibold text-gray-800 mb-2">
                                        –ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Ü–µ–ª–∏: 
                                        <span className={weightDiff > 0 ? 'text-red-600' : 'text-green-600'}>
                                            {weightDiff > 0 ? '+' : ''}{weightDiff.toFixed(1)} –∫–≥
                                        </span>
                                    </div>
                                    <div className="text-sm text-gray-600">
                                        {weightDiff > 0 ? '–û—Å—Ç–∞–ª–æ—Å—å —Å–±—Ä–æ—Å–∏—Ç—å' : weightDiff < 0 ? '–¶–µ–ª—å –ø—Ä–µ–≤—ã—à–µ–Ω–∞ –Ω–∞' : '–¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞!'}
                                        {weightDiff !== 0 && ` ${Math.abs(weightDiff).toFixed(1)} –∫–≥`}
                                    </div>
                                </div>
                            </div>
                        </div>

                        {/* –ì—Ä–∞—Ñ–∏–∫ –≤–µ—Å–∞ */}
                        {weightData.length > 0 && (
                            <div className="bg-white rounded-2xl shadow-lg p-6">
                                <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">üìà –î–∏–Ω–∞–º–∏–∫–∞ –≤–µ—Å–∞ –∑–∞ 30 –¥–Ω–µ–π</h2>
                                <div className="h-80">
                                    <ResponsiveContainer width="100%" height="100%">
                                        <LineChart data={weightData}>
                                            <CartesianGrid strokeDasharray="3 3" />
                                            <XAxis dataKey="dateFormatted" />
                                            <YAxis 
                                                domain={['dataMin - 2', 'dataMax + 2']}
                                                tickFormatter={formatWeight}
                                            />
                                            <Tooltip formatter={(value: number) => [formatWeight(value)]} />
                                            <Legend />
                                            <Line 
                                                type="monotone" 
                                                dataKey="weight" 
                                                stroke="#3B82F6" 
                                                strokeWidth={3}
                                                name="–í–µ—Å" 
                                                dot={{ fill: '#3B82F6', strokeWidth: 2, r: 4 }}
                                            />
                                            <Line 
                                                type="monotone" 
                                                dataKey="goal" 
                                                stroke="#10B981" 
                                                strokeWidth={2}
                                                strokeDasharray="5 5"
                                                name="–¶–µ–ª—å"
                                                dot={false}
                                            />
                                        </LineChart>
                                    </ResponsiveContainer>
                                </div>
                            </div>
                        )}

                        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
                        <div className="bg-white rounded-2xl shadow-lg p-6">
                            <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">üìã –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
                            <div className="space-y-4">
                                <div className="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                                    <span className="font-medium text-gray-700">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –≤–∑–≤–µ—à–∏–≤–∞–Ω–∏–µ:</span>
                                    <span className="text-gray-600">
                                        {profile.last_weight_date_int ? 
                                            new Date(profile.last_weight_date_int * 86400000).toLocaleDateString('ru-RU') : 
                                            '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
                                        }
                                    </span>
                                </div>
                                <div className="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                                    <span className="font-medium text-gray-700">–ï–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è:</span>
                                    <span className="text-gray-600">{profile.weight_measure || '–ö–≥'}</span>
                                </div>
                                <div className="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                                    <span className="font-medium text-gray-700">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</span>
                                    <span className="text-gray-600">{profile.last_weight_comment || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'}</span>
                                </div>
                            </div>
                        </div>
                    </div>
                )}

                {!loading && !profile && (
                    <div className="bg-white rounded-2xl shadow-lg p-8 text-center">
                        <div className="text-6xl mb-4">üîí</div>
                        <h3 className="text-xl font-semibold text-gray-700 mb-2">–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h3>
                        <p className="text-gray-500 mb-4">–ü–æ–¥–∫–ª—é—á–∏—Ç–µ FatSecret –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –æ –≤–µ—Å–µ</p>
                        <Link 
                            href="/api/fatsecret/auth/start"
                            className="inline-block px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-medium"
                        >
                            üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å FatSecret
                        </Link>
                    </div>
                )}
            </div>
        </div>
    );
}